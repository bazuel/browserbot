{
  "version": 3,
  "sources": ["../src/session.monitor.ts", "../src/on.event.ts", "../src/throttle.util.ts", "../src/dispatched.events.ts", "../src/mouse.monitor.ts", "../src/cookie.monitor.ts", "../src/raf-timer.util.ts", "../src/input.monitor.ts", "../src/property.observer.ts", "../src/input-value.monitor.ts", "../src/keyboard.monitor.ts", "../src/method.observer.ts", "../src/page.monitor.ts", "../src/scroll.monitor.ts", "../src/storage.monitor.ts", "../src/window-resize.monitor.ts", "../src/selector-finder.util.ts", "../src/fetch.hook.ts", "../src/http.monitor.ts", "../src/serialize-target.ts", "../src/dom/dom-mutations.monitor.ts", "../src/dom/serializer/css-absolute-url.transformer.ts", "../src/dom/serializer/serializer.utils.ts", "../src/dom/serializer/style-attribute.serializer.ts", "../src/dom/serializer/mutation.serializer.ts", "../src/dom/serializer/elid.generator.ts", "../src/dom/serializer/web-component.serializer.ts", "../src/dom/serializer/text.serializer.ts", "../src/dom/serializer/stylesheet.serializer.ts", "../src/dom/serializer/media.serializer.ts", "../src/dom/serializer/form.serializer.ts", "../src/dom/serializer/canvas.serializer.ts", "../src/dom/serializer/element.serializer.ts", "../src/dom/dom.monitor.ts", "../src/dom/css.monitor.ts", "../src/dom/media.monitor.ts", "../src/dom/force-web-components-serialization.patch.ts"],
  "sourcesContent": ["import { MouseMonitor } from './mouse.monitor';\nimport { CookieMonitor } from './cookie.monitor';\nimport { InputMonitor } from './input.monitor';\nimport { InputValueMonitor } from './input-value.monitor';\nimport { KeyboardMonitor } from './keyboard.monitor';\nimport { PageMonitor } from './page.monitor';\nimport { ScrollMonitor } from './scroll.monitor';\nimport { StorageMonitor } from './storage.monitor';\nimport { WindowResizeMonitor } from './window-resize.monitor';\nimport { blevent } from './dispatched.events';\nimport { ElementSelectorFinder } from './selector-finder.util';\nimport { HttpMonitor } from './http.monitor';\nimport { getElementRect, getElementAttributes } from './serialize-target';\nimport { DomMonitor } from './dom/dom.monitor';\nimport { CssMonitor } from './dom/css.monitor';\nimport { MediaMonitor } from './dom/media.monitor';\nimport { ForceWebComponentsSerializationPatch } from './dom/force-web-components-serialization.patch';\nimport { BLSessionEvent, BLEventWithTarget, BLEvent } from './events';\n\nconst state: { sendTo: (event: BLEvent | BLSessionEvent) => void } = { sendTo: () => {} };\n\nconst selector = (e) => {\n  try {\n    return new ElementSelectorFinder().findUniqueSelector(e);\n  } catch {\n    return '';\n  }\n};\n\nexport function targetToSelectors(e: BLEventWithTarget) {\n  // used only for document element (scroll event)\n  const targetSelector = e.target ? selector(e.target) : ''; //it's a selector. a string\n  const currentTargetSelector = e.currentTarget ? selector(e.currentTarget) : ''; //it's a selector. a string\n  const { target, currentTarget, ...evt } = e as any; // removes target and currentTarget from the event since we have\n  return { ...evt, targetSelector, currentTargetSelector };\n}\n\n//used only for document \"element\" (mousescroll)\nfunction sendEventWithTargetToExtension(event) {\n  state.sendTo(targetToSelectors(event));\n}\n\nasync function sendEventWithSerializedTargetToExtension(event) {\n  const rect = await getElementRect(event.target);\n  const attributes = getElementAttributes(event.target);\n  const { target, currentTarget, ...evt } = event as any;\n  state.sendTo({\n    ...evt,\n    target: {\n      rect,\n      attributes,\n      tag: event.target.tagName,\n      innerText: event.target.innerText ?? ''\n    }\n  });\n}\n\nnew ForceWebComponentsSerializationPatch().apply();\nconst monitors = [\n  new MouseMonitor(),\n  new CookieMonitor(),\n  new InputMonitor(),\n  new InputValueMonitor(),\n  new KeyboardMonitor(),\n  new PageMonitor(),\n  new ScrollMonitor(),\n  new StorageMonitor(),\n  new WindowResizeMonitor()\n];\n\nconst delayedMonitors = [new DomMonitor(), new CssMonitor(), new MediaMonitor()];\n\nObject.keys(blevent.mouse).forEach((me) => {\n  if (me != 'scroll') blevent.mouse[me].on(sendEventWithSerializedTargetToExtension);\n  else blevent.mouse[me].on(sendEventWithTargetToExtension);\n});\n\nblevent.media.play.on(sendEventWithSerializedTargetToExtension);\nblevent.media.pause.on(sendEventWithSerializedTargetToExtension);\n\nblevent.dom.change.on(state.sendTo);\nblevent.dom.full.on(state.sendTo);\nblevent.dom.css_add.on(sendEventWithSerializedTargetToExtension);\nblevent.dom.css_remove.on(sendEventWithSerializedTargetToExtension);\n\nblevent.cookie.data.on(state.sendTo);\n\nObject.keys(blevent.keyboard).forEach((ke) => {\n  blevent.keyboard[ke].on(sendEventWithSerializedTargetToExtension);\n});\n\nObject.keys(blevent.page).forEach((me) => blevent.page[me].on(state.sendTo));\nObject.keys(blevent.window).forEach((me) => blevent.window[me].on(state.sendTo));\nObject.keys(blevent.storage).forEach((me) => blevent.storage[me].on(state.sendTo));\n\nconst httpData = (e) => {\n  const headers = e.request.headers;\n  const method = e.request.method;\n  const path = e.request.path;\n  const timestamp = e.request.timestamp;\n  const url = e.request.url;\n  const body = e.request.body;\n  const request = {\n    headers,\n    method,\n    path,\n    timestamp,\n    url,\n    body\n  };\n  let he = {\n    name: e.name,\n    type: e.type,\n    timestamp: e.timestamp,\n    request,\n    status: e.target?.status\n  };\n  return he;\n};\n\nconst errorHandler = (e) => {\n  let event = httpData(e);\n  state.sendTo(event);\n};\nblevent.http.error.on(errorHandler);\nblevent.http.abort.on(errorHandler);\nblevent.http.after_response.on((e) => {\n  let event = httpData(e);\n  let response = {\n    body: e.body,\n    headers: e.headers,\n    status: e.status,\n    timestamp: e.timestamp\n  };\n  state.sendTo({ ...event, response });\n});\n\nconst httpMonitor = new HttpMonitor();\n\nexport class SessionMonitor {\n  constructor(sendTo: typeof state['sendTo']) {\n    state.sendTo = sendTo;\n  }\n\n  enable() {\n    httpMonitor.enable();\n    monitors.forEach((m) => m.enable());\n    setTimeout(() => {\n      delayedMonitors.forEach((m) => m.enable());\n    }, 1000);\n  }\n\n  disable() {\n    httpMonitor.disable();\n    monitors.forEach((m) => m.disable());\n    delayedMonitors.forEach((m) => m.disable());\n  }\n}\n", "export function on(\r\n  type: string,\r\n  fn: EventListenerOrEventListenerObject,\r\n  target: Document | Window = document\r\n) {\r\n  const options = { capture: true, passive: true };\r\n  if (target) target.addEventListener(type, fn, options);\r\n  return () => target.removeEventListener(type, fn, options);\r\n}\r\n", "export function throttle<F extends ((...args: unknown[]) => any)>(\r\n    func: F,\r\n    wait: number\r\n) {\r\n    let timeout: number | null | any;\r\n    let previous = 0;\r\n    return function (this:unknown, _arg?) {\r\n        let now = Date.now();\r\n\r\n        let remaining = wait - (now - previous);\r\n        let context = this as unknown;\r\n        let args:any[] = arguments as unknown as any[];\r\n        if (remaining <= 0 || remaining > wait) {\r\n            if (timeout) {\r\n                clearTimeout(timeout);\r\n                timeout = null;\r\n            }\r\n            previous = now;\r\n            func.apply(context, args);\r\n        } else if (!timeout) {\r\n            timeout = setTimeout(() => {\r\n                previous = Date.now();\r\n                timeout = null;\r\n                func.apply(context, args);\r\n            }, remaining)\r\n        }\r\n    };\r\n}\r\n\r\nexport function debounce<F extends ((...args: any[]) => any)>(func: F, waitFor: number) {\r\n    const debounced = (delay, fn) => {\r\n        let timerId;\r\n        return (...args) => {\r\n            if (timerId) {\r\n                clearTimeout(timerId);\r\n            }\r\n            timerId = setTimeout(() => {\r\n                fn(...args);\r\n                timerId = null;\r\n            }, delay);\r\n        }\r\n    }\r\n    return debounced(waitFor, func)\r\n}\r\n", "import {\r\n  BLCookieEvent,\r\n  BLCrossTabEvent,\r\n  BLCssRuleAddEvent,\r\n  BLCssRuleRemoveEvent,\r\n  BLDeviceEvent,\r\n  BLDevtoolsEvent,\r\n  BLDomEvent,\r\n  BLDomMapEvent,\r\n  BLEvent,\r\n  BLEventName,\r\n  BLEventType,\r\n  BLGlobalErrorEvent,\r\n  BLGlobalPromiseErrorEvent,\r\n  BLHTTPAbortEvent,\r\n  BLHTTPBeforeResponseEvent,\r\n  BLHTTPErrorEvent,\r\n  BLHTTPRequestEvent,\r\n  BLHTTPResponseEvent,\r\n  BLInputChangeEvent,\r\n  BLInputCheckboxChangeEvent,\r\n  BLKeyboardEvent,\r\n  BLMediaEvent,\r\n  BLMouseEvent,\r\n  BLNetworkEvent,\r\n  BLNote,\r\n  BLPageAdressEvent,\r\n  BLPageHashEvent,\r\n  BLPageReferrerEvent,\r\n  BLPageVisibilityEvent,\r\n  BLPerformanceCpuEvent,\r\n  BLPerformanceMemoryEvent,\r\n  BLPerformanceTimingEvent,\r\n  BLScrollEvent,\r\n  BLStorageEvent,\r\n  BLWindowResizeEvent,\r\n} from \"./events\";\r\n\r\ntype Dispatcher<T> = ((event?: Partial<T>) => BLEvent) & {\r\n  eventName: BLEventName;\r\n  eventType: BLEventType;\r\n  on(handler: (e: T) => void);\r\n};\r\n\r\nconst eventTypes: { [t in BLEventType]: BLEventName[] } = {} as any;\r\nconst dispatcher = <T extends BLEvent>(\r\n  eventType: BLEventType,\r\n  eventName: BLEventName\r\n): Dispatcher<T> => {\r\n  const fullEventName: string = `buglink.${eventType}.${eventName}`;\r\n  eventTypes[eventType] = eventTypes[eventType] || [];\r\n  eventTypes[eventType].push(eventName);\r\n  let dispatcherFunction = (event?: T) => {\r\n    let e = event ? ({ ...event } as unknown as BLEvent) : ({} as BLEvent);\r\n    e.name = eventName;\r\n    e.type = eventType;\r\n    if (!e.timestamp) e.timestamp = new Date().getTime();\r\n    document.dispatchEvent(new CustomEvent(fullEventName, { detail: e }));\r\n    return e;\r\n  };\r\n  (dispatcherFunction as any).eventName = eventName;\r\n  (dispatcherFunction as any).eventType = eventType;\r\n  (dispatcherFunction as any).on = (h) => {\r\n    document.addEventListener(fullEventName, (c: Event) => {\r\n      if ((c as CustomEvent).detail) h((c as CustomEvent).detail);\r\n    });\r\n  };\r\n  return dispatcherFunction as Dispatcher<T>;\r\n};\r\nconst d = dispatcher;\r\n\r\nconst events = {\r\n  user: {\r\n    note: d<BLNote>(\"user\", \"note\"),\r\n    report: d<BLEvent>(\"user\", \"report\"),\r\n  },\r\n  device: {\r\n    information: d<BLDeviceEvent>(\"device\", \"device-information\"),\r\n  },\r\n  cookie: {\r\n    data: d<BLCookieEvent>(\"cookie\", \"cookie-data\"),\r\n  },\r\n  http: {\r\n    abort: d<BLHTTPAbortEvent>(\"http\", \"request-abort\"),\r\n    error: d<BLHTTPErrorEvent>(\"http\", \"request-error\"),\r\n    before_request: d<BLHTTPRequestEvent>(\"http\", \"before-request\"),\r\n    before_response: d<BLHTTPBeforeResponseEvent>(\"http\", \"before-response\"),\r\n    after_response: d<BLHTTPResponseEvent>(\"http\", \"after-response\"),\r\n  },\r\n  tab: {\r\n    data: d<BLCrossTabEvent>(\"tab\", \"tab-data\"),\r\n    opened: d<BLCrossTabEvent>(\"tab\", \"tab-opened\"),\r\n    closed: d<BLCrossTabEvent>(\"tab\", \"tab-closed\"),\r\n  },\r\n  dom: {\r\n    change: d<BLDomEvent>(\"dom\", \"dom-change\"),\r\n    full: d<BLDomEvent>(\"dom\", \"dom-full\"),\r\n    css_add: d<BLCssRuleAddEvent>(\"dom\", \"css-add\"),\r\n    css_remove: d<BLCssRuleRemoveEvent>(\"dom\", \"css-remove\"),\r\n    map_created: d<BLDomMapEvent>(\"dom\", \"map-created\"),\r\n  },\r\n  performance: {\r\n    cpu: d<BLPerformanceCpuEvent>(\"performance\", \"cpu\"),\r\n    memory: d<BLPerformanceMemoryEvent>(\"performance\", \"memory\"),\r\n    timing: d<BLPerformanceTimingEvent>(\"performance\", \"timing\"),\r\n  },\r\n  devtools: {\r\n    open: d<BLDevtoolsEvent>(\"devtools\", \"devtools-open\"),\r\n  },\r\n  error: {\r\n    global: d<BLGlobalErrorEvent>(\"error\", \"global-error\"),\r\n    promise: d<BLGlobalPromiseErrorEvent>(\"error\", \"global-promise\"),\r\n  },\r\n  keyboard: {\r\n    up: d<BLKeyboardEvent>(\"keyboard\", \"keyup\"),\r\n    down: d<BLKeyboardEvent>(\"keyboard\", \"keydown\"),\r\n    input: d<BLInputChangeEvent>(\"keyboard\", \"input\"),\r\n    value: d<BLInputChangeEvent>(\"keyboard\", \"value\"),\r\n    checked: d<BLInputCheckboxChangeEvent>(\"keyboard\", \"checked\"),\r\n  },\r\n  storage: {\r\n    session_update: d<BLStorageEvent>(\"storage\", \"session-update\"),\r\n    local_update: d<BLStorageEvent>(\"storage\", \"local-update\"),\r\n    session_full: d<BLStorageEvent>(\"storage\", \"session-full\"),\r\n    local_full: d<BLStorageEvent>(\"storage\", \"local-full\"),\r\n  },\r\n  media: {\r\n    play: d<BLMediaEvent>(\"media\", \"play\"),\r\n    pause: d<BLMediaEvent>(\"media\", \"pause\"),\r\n  },\r\n  page: {\r\n    visibility: d<BLPageVisibilityEvent>(\"page\", \"visibility\"),\r\n    referrer: d<BLPageReferrerEvent>(\"page\", \"referrer\"),\r\n    network: d<BLNetworkEvent>(\"page\", \"network\"),\r\n    address: d<BLPageAdressEvent>(\"page\", \"address\"),\r\n    hash: d<BLPageHashEvent>(\"page\", \"hash\"),\r\n  },\r\n  window: {\r\n    resize: d<BLWindowResizeEvent>(\"window\", \"resize\"),\r\n  },\r\n  mouse: {\r\n    touchmove: d<BLMouseEvent>(\"mouse\", \"touchmove\"),\r\n    mousemove: d<BLMouseEvent>(\"mouse\", \"mousemove\"),\r\n    mouseup: d<BLMouseEvent>(\"mouse\", \"mouseup\"),\r\n    mousedown: d<BLMouseEvent>(\"mouse\", \"mousedown\"),\r\n    click: d<BLMouseEvent>(\"mouse\", \"click\"),\r\n    contextmenu: d<BLMouseEvent>(\"mouse\", \"contextmenu\"),\r\n    dblclick: d<BLMouseEvent>(\"mouse\", \"dblclick\"),\r\n    touchstart: d<BLMouseEvent>(\"mouse\", \"touchstart\"),\r\n    touchend: d<BLMouseEvent>(\"mouse\", \"touchend\"),\r\n    scroll: d<BLScrollEvent>(\"mouse\", \"scroll\"),\r\n    elementscroll: d<BLScrollEvent>(\"mouse\", \"elementscroll\"),\r\n  },\r\n  session: {\r\n    start: d<BLEvent & { name: \"session-start\"; type: \"session\" }>(\r\n      \"session\",\r\n      \"session-start\"\r\n    ),\r\n    useremail: d<\r\n      BLEvent & { name: \"user-email\"; type: \"session\"; email: string }\r\n    >(\"session\", \"user-email\"),\r\n    userstart: d<BLEvent & { name: \"user-start\"; type: \"session\" }>(\r\n      \"session\",\r\n      \"user-start\"\r\n    ),\r\n    userstop: d<BLEvent & { name: \"user-stop\"; type: \"session\" }>(\r\n      \"session\",\r\n      \"user-stop\"\r\n    ),\r\n  },\r\n  list: (...names: BLEventName[]) => {\r\n    return names;\r\n  },\r\n  name: (name: BLEventName) => {\r\n    return name;\r\n  },\r\n  type: (...type: BLEventType[]) => {\r\n    let ns: BLEventName[] = [];\r\n    for (let t of type) ns.push(...eventTypes[t]);\r\n    return ns;\r\n  },\r\n  types: (...types: BLEventType[]) => {\r\n    return types;\r\n  },\r\n};\r\n\r\nexport const blevent = events;\r\n\r\nexport const activityRelatedEventNames: BLEventName[] = [\r\n  \"dom-full\",\r\n  ...blevent.type(\"mouse\"),\r\n  \"keydown\",\r\n  \"keyup\",\r\n  \"note\",\r\n];\r\n", "import {BLMonitor, BLMouseEvent} from \"./events\";\r\nimport {on} from \"./on.event\";\r\nimport {throttle} from \"./throttle.util\";\r\nimport {blevent} from \"./dispatched.events\";\r\n\r\nexport class MouseMonitor implements BLMonitor {\r\n    private disableMonitoring: () => void = ()=>{};\r\n\r\n    enable(): void {\r\n        function mouseEventMapper(evt, processBoundingRect = true) {\r\n            const {target, currentTarget} = evt;\r\n            const isTouch = !!evt.changedTouches\r\n            const {clientX, clientY} = isTouch ? evt.changedTouches[0] : evt;\r\n\r\n            let data: Partial<BLMouseEvent> = {\r\n                x: clientX,\r\n                y: clientY,\r\n                target,\r\n                currentTarget\r\n            }\r\n            if (processBoundingRect) {\r\n                let rect = (target as HTMLElement).getBoundingClientRect()\r\n                let relative = {x: clientX - rect.left, y: clientY - rect.top}\r\n                data.relative = relative\r\n                if (evt.currentTarget && evt.currentTarget.getBoundingClientRect) {\r\n                    try {\r\n                        let rectCT = (currentTarget as HTMLElement).getBoundingClientRect()\r\n                        let relativeCT = {x: clientX - rectCT.left, y: clientY - rectCT.top}\r\n                        data.relativeCT = relativeCT\r\n                        data.currentTarget = evt.currentTarget\r\n                    } catch (e) {\r\n                        //ignore\r\n                    }\r\n                }\r\n\r\n            }\r\n            return data\r\n        }\r\n\r\n\r\n        const updatePosition = throttle(\r\n            evt => {\r\n                let data = mouseEventMapper(evt, false)\r\n                data.name = !!(evt as any).changedTouches ? \"touchmove\" : \"mousemove\"\r\n                if (data.name == blevent.name(\"touchmove\"))\r\n                    blevent.mouse.touchmove(data)\r\n                else\r\n                    blevent.mouse.mousemove(data)\r\n            }, 50);\r\n        const handlers = [\r\n            on('mousemove', updatePosition),\r\n            on('touchmove', updatePosition),\r\n        ];\r\n        let restoreOriginals = [...handlers]\r\n\r\n        let events = blevent.list(\"mouseup\", \"mousedown\", \"click\", \"contextmenu\", \"dblclick\", \"touchstart\", \"touchend\")\r\n        for (let e of events) {\r\n            restoreOriginals.push(on(e, (evt) => {\r\n                let data = {...mouseEventMapper(evt), name: e}\r\n                blevent.mouse[e](data)\r\n            }))\r\n        }\r\n        this.disableMonitoring = () => {\r\n            restoreOriginals.forEach(restore => {\r\n                restore()\r\n            })\r\n        }\r\n    }\r\n\r\n    disable(): void {\r\n        this.disableMonitoring()\r\n    }\r\n}\r\n", "import { BLMonitor } from \"./events\";\r\nimport {blevent} from \"./dispatched.events\";\r\n\r\nexport class CookieMonitor implements BLMonitor {\r\n  private interval;\r\n\r\n  enable(): void {\r\n    let lastCookies = \"\";\r\n    \r\n    this.interval = setInterval(() => {\r\n      if (document.cookie != lastCookies) {\r\n        lastCookies = document.cookie;\r\n        blevent.cookie.data({ cookie: lastCookies });\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  disable(): void {\r\n    clearInterval(this.interval);\r\n  }\r\n}\r\n", "\r\nexport class RequestAnimationFrameTimer {\r\n    private reqAniFrameId = 0;\r\n    private baseRafTime = 0;\r\n    private end = false;\r\n\r\n    constructor() {\r\n        this.resetTimer()\r\n    }\r\n\r\n    stop() {\r\n        this.end = true\r\n    }\r\n\r\n    start(callback: ((msFromLast, msFromStart) => void)) {\r\n        this.end = false\r\n        let lastTime = 0\r\n        let internalCallback = (t) => {\r\n            const timeFromBase = t - this.baseRafTime\r\n            callback(t - lastTime, timeFromBase)\r\n            lastTime = t\r\n            cancelAnimationFrame(this.reqAniFrameId)\r\n            if (!this.end)\r\n                this.reqAniFrameId = requestAnimationFrame(internalCallback)\r\n        }\r\n\r\n        this.reqAniFrameId = requestAnimationFrame(internalCallback)\r\n    }\r\n\r\n    resetTimer() {\r\n        const x = requestAnimationFrame((t) => {\r\n            this.baseRafTime = t\r\n            cancelAnimationFrame(x)\r\n        })\r\n    }\r\n\r\n\r\n}\r\n", "import {BLMonitor} from \"./events\";\r\nimport {RequestAnimationFrameTimer} from \"./raf-timer.util\";\r\nimport {blevent} from \"./dispatched.events\";\r\nimport {on} from \"./on.event\";\r\n\r\nexport class InputMonitor implements BLMonitor {\r\n    private disableMonitoring: () => void = ()=>{};\r\n\r\n    enable(): void {\r\n\r\n        const inputs = new Map()\r\n        const checked = new Map()\r\n        let raf = new RequestAnimationFrameTimer()\r\n        raf.start(ms => {\r\n            inputs.forEach((e) => {\r\n                blevent.keyboard.input(e)\r\n            })\r\n            inputs.clear()\r\n            checked.forEach((e) => {\r\n                blevent.keyboard.checked(e)\r\n            })\r\n            checked.clear()\r\n        })\r\n\r\n        const eventHandler = (event: Event) => {\r\n            const {target} = event;\r\n            const {type, name} = target as HTMLInputElement;\r\n\r\n            if (type === 'checkbox') {\r\n                blevent.keyboard.checked({target: target ?? undefined, checked: (target as HTMLInputElement)?.checked});\r\n            } else if (type === 'radio') {\r\n                if (name)\r\n                    document.querySelectorAll(`input[type=\"radio\"][name=\"${name}\"]`)\r\n                        .forEach(el => {\r\n                            if (el && el !== target) {\r\n                                checked.set(el, {\r\n                                    target: el,\r\n                                    checked: (el as HTMLInputElement)?.checked\r\n                                })\r\n                            }\r\n                        });\r\n                if (target)\r\n                    checked.set(target, {target: target, checked: (target as HTMLInputElement)?.checked});\r\n            } else {\r\n                let text = (target as HTMLInputElement)?.value;/*\r\n                if (type === 'password') {\r\n                    text = text.replace(/./g, '*');\r\n                }*/\r\n                if (target)\r\n                    inputs.set(target, {target: target, value: text});\r\n            }\r\n        }\r\n\r\n\r\n        let i = on('input', eventHandler);\r\n        let c = on('change', eventHandler);\r\n        this.disableMonitoring = () => {\r\n            c();\r\n            i()\r\n            raf.stop()\r\n        }\r\n    }\r\n\r\n    disable(): void {\r\n        this.disableMonitoring()\r\n    }\r\n\r\n}\r\n", "export function observeProperty<T>(\r\n    target: T,\r\n    key: keyof T,\r\n    propertyDescriptor: PropertyDescriptor,\r\n    restore?: boolean,\r\n) {\r\n    const original = Object.getOwnPropertyDescriptor(target, key);\r\n    Object.defineProperty(\r\n        target,\r\n        key,\r\n        restore\r\n            ? propertyDescriptor\r\n            : {\r\n                set(value) {\r\n                    // put hooked setter into event loop to avoid of set latency\r\n                    setTimeout(() => {\r\n                        propertyDescriptor.set!.call(this, value);\r\n                    }, 0);\r\n                    if (original && original.set) {\r\n                        original.set.call(this, value);\r\n                    }\r\n                },\r\n            },\r\n    );\r\n    return () => observeProperty(target, key, original || {}, true);\r\n}", "import {BLMonitor} from \"./events\";\r\nimport {RequestAnimationFrameTimer} from \"./raf-timer.util\";\r\nimport {observeProperty} from \"./property.observer\";\r\nimport {blevent} from \"./dispatched.events\";\r\n\r\n\r\nexport class InputValueMonitor implements BLMonitor {\r\n    private disableMonitoring: () => void = ()=>{};\r\n\r\n    enable(): void {\r\n\r\n        let values = new Map()\r\n        let checked = new Map()\r\n\r\n        let raf = new RequestAnimationFrameTimer()\r\n        raf.start(ms => {\r\n            values.forEach((e) => {\r\n                blevent.keyboard.value(e)\r\n            })\r\n            values.clear()\r\n            checked.forEach((e) => {\r\n                blevent.keyboard.checked(e)\r\n            })\r\n            checked.clear()\r\n        })\r\n\r\n        const valueSetter = {\r\n            set(this:any) {\r\n                if (this)\r\n                    values.set(this, {target: this, value: this.value})\r\n            }\r\n        }\r\n        const checkedSetter = {\r\n            set(this:any) {\r\n                if (this)\r\n                    checked.set(this, {target: this, checked: this.checked})\r\n            }\r\n        }\r\n        let restoreOriginals = [\r\n            ...[HTMLInputElement, HTMLSelectElement, HTMLTextAreaElement]\r\n                .map(e => observeProperty(e.prototype, 'value', valueSetter)),\r\n            observeProperty(HTMLInputElement.prototype, 'checked', checkedSetter)]\r\n        this.disableMonitoring = () => {\r\n            restoreOriginals.forEach(restore => {\r\n                restore()\r\n            })\r\n            raf.stop()\r\n        }\r\n    }\r\n\r\n    disable(): void {\r\n        this.disableMonitoring()\r\n    }\r\n\r\n}\r\n", "import {BLMonitor} from \"./events\";\r\nimport {blevent} from \"./dispatched.events\";\r\nimport {on} from \"./on.event\";\r\n\r\n\r\nexport class KeyboardMonitor implements BLMonitor {\r\n    private disableMonitoring: () => void = ()=>{};\r\n\r\n    enable(): void {\r\n        let k: any[] = []\r\n        let ev = e => ({\r\n            key: e.key,\r\n            code: e.code,\r\n            locale: (e as any).locale,\r\n            modifier: e.ctrlKey ? 'ctrl' : e.altKey ? 'alt' : e.shiftKey ? 'shift' : 'none',\r\n            target: e.target\r\n        })\r\n        k.push(on('keyup', (e: Event) => (e as KeyboardEvent).code && blevent.keyboard.up(ev(e))))\r\n        k.push(on('keydown', (e: Event) => (e as KeyboardEvent).code && blevent.keyboard.down(ev(e))))\r\n        this.disableMonitoring = () => k.forEach(restore => {\r\n            restore()\r\n        })\r\n    }\r\n\r\n    disable(): void {\r\n        this.disableMonitoring()\r\n    }\r\n\r\n}\r\n", "export function observeMethod<T>(\r\n    target: T,\r\n    method: keyof T,\r\n    newMethod\r\n) {\r\n    const original = target[method] as any\r\n    const wrapper = function (this:T, ...args) {\r\n        let options = {\r\n            skipThrow: false,\r\n            override: null,\r\n            onError: (error) => {\r\n            },\r\n            beforeReturn: result => {\r\n                return result\r\n            },\r\n            executeOriginal: () => {\r\n                return original.apply(this, args);\r\n            }\r\n        }\r\n        newMethod.apply(this, [...args, options])\r\n        if(options.override)\r\n            { // @ts-ignore\r\n                return options.override(args)\r\n            }\r\n        else {\r\n            try {\r\n                let rv = options.executeOriginal()\r\n                return options.beforeReturn(rv)\r\n            } catch (e) {\r\n                options.onError(e)\r\n                if (!options.skipThrow)\r\n                    throw e\r\n            }\r\n        }\r\n    }\r\n    target[method] = wrapper as any\r\n    return function () {\r\n        target[method] = original\r\n    };\r\n}\r\n\r\nexport interface MethodObserverOptions {\r\n    skipThrow: boolean,\r\n    onError: (error) => void,\r\n    beforeReturn: <T>(result: T | void) => T | void,\r\n    executeOriginal: <T>() => T | void\r\n    override: <T>(...args) => T | void\r\n}\r\n", "import { BLMonitor } from './events';\r\nimport { blevent } from './dispatched.events';\r\nimport { observeMethod } from './method.observer';\r\n\r\nexport class PageMonitor implements BLMonitor {\r\n  private disableMonitoring: () => void = () => {};\r\n\r\n  enable(): void {\r\n    let pageHash = '';\r\n    let pageAddress = '';\r\n    let prevVisibility = false;\r\n    let vch = (_) => {\r\n      if (prevVisibility != !document.hidden) {\r\n        prevVisibility = !document.hidden;\r\n        blevent.page.visibility({ active: !document.hidden });\r\n      }\r\n    };\r\n    const hch = (_) => {\r\n      if (pageHash != window.location.hash) {\r\n        pageHash = window.location.hash;\r\n        blevent.page.hash({ hash: window.location.hash });\r\n      }\r\n    };\r\n    const ach = (_?) => {\r\n      if (pageAddress != window.location.href) {\r\n        pageAddress = window.location.href;\r\n        blevent.page.address({ address: window.location.href });\r\n      }\r\n    };\r\n    const nch_online = (_) => {\r\n      blevent.page.network({ online: true });\r\n    };\r\n    const nch_offline = (_) => {\r\n      blevent.page.network({ online: false });\r\n    };\r\n    document.addEventListener('visibilitychange', vch);\r\n    window.addEventListener('hashchange', hch);\r\n    window.addEventListener('offline', nch_offline);\r\n    window.addEventListener('online', nch_online);\r\n    const restorePushState = observeMethod(window.history, 'pushState', (_) => {\r\n      ach();\r\n    });\r\n    const restoreReplaceState = observeMethod(window.history, 'replaceState', (_) => {\r\n      ach();\r\n    });\r\n    window.addEventListener('popstate', ach);\r\n\r\n    const visibilityCheck = setInterval(vch, 1000);\r\n\r\n    this.disableMonitoring = () => {\r\n      window.removeEventListener('hashchange', hch);\r\n      document.removeEventListener('visibilitychange', vch);\r\n      window.removeEventListener('online', nch_online);\r\n      window.removeEventListener('offline', nch_offline);\r\n      window.removeEventListener('popstate', ach);\r\n      restorePushState();\r\n      restoreReplaceState();\r\n      clearInterval(visibilityCheck);\r\n    };\r\n\r\n    blevent.page.referrer({ referrer: document.referrer, url: document.URL });\r\n  }\r\n\r\n  disable(): void {\r\n    this.disableMonitoring();\r\n  }\r\n}\r\n", "import {BLMonitor, BLScrollEvent} from \"./events\";\r\nimport {throttle} from \"./throttle.util\";\r\nimport {on} from \"./on.event\";\r\nimport {blevent} from \"./dispatched.events\";\r\n\r\nexport class ScrollMonitor implements BLMonitor {\r\n    private disableScroll: () => any = ()=>{}; \r\n\r\n    enable(): void {\r\n        const updatePosition = throttle(evt => {\r\n            this.manageScrollEvent(evt);\r\n        }, 50);\r\n        this.disableScroll = on('scroll', updatePosition);\r\n    }\r\n\r\n    manageScrollEvent(evt) {\r\n        const scrollEl = evt.target as HTMLElement\r\n        let x = scrollEl.scrollLeft\r\n        let y = scrollEl.scrollTop\r\n        if (evt.target == document) {\r\n            x = window.scrollX\r\n            y = window.scrollY\r\n        }\r\n        let data: Partial<BLScrollEvent> = {\r\n            x,\r\n            y,\r\n            target: evt.target,\r\n            currentTarget: evt.currentTarget\r\n        }\r\n        if (evt.target === document)\r\n            blevent.mouse.scroll(data)\r\n        else\r\n            blevent.mouse.elementscroll(data)\r\n    }\r\n\r\n    disable(): void {\r\n        this.disableScroll()\r\n    }\r\n}\r\n", "import {blevent} from \"./dispatched.events\";\r\nimport {BLMonitor} from \"./events\";\r\n\r\nexport class StorageMonitor implements BLMonitor {\r\n    private disableMonitoring: () => void = ()=>{};\r\n\r\n    constructor(private options: { intervalTimeForFullEvent: number } = {intervalTimeForFullEvent: -1}) {\r\n    }\r\n\r\n\r\n    serializeStorage(storage) {\r\n        const ls = {};\r\n        for (let i = 0; i < storage.length; i++) {\r\n            const k = storage.key(i);\r\n            const v = storage.getItem(k);\r\n            ls[k] = v;\r\n        }\r\n        return {storage: ls}\r\n    }\r\n\r\n    fireFullEvents() {\r\n        blevent.storage.session_full(this.serializeStorage(sessionStorage))\r\n        blevent.storage.local_full(this.serializeStorage(localStorage))\r\n    }\r\n\r\n    enable(): void {\r\n\r\n\r\n        this.fireFullEvents()\r\n        let full;\r\n        if (this.options.intervalTimeForFullEvent > 0) {\r\n            full = setInterval(() => {\r\n                this.fireFullEvents()\r\n            }, this.options.intervalTimeForFullEvent)\r\n\r\n        }\r\n\r\n        let el = (e: StorageEvent) => {\r\n            if(e.key){\r\n                let v = {}\r\n                v[e.key] = e.newValue\r\n                if (e.storageArea === localStorage)\r\n                    blevent.storage.local_update({storage: v})\r\n                else\r\n                    blevent.storage.session_update({storage: v})\r\n            }\r\n        }\r\n        window.addEventListener('storage', el);\r\n\r\n        this.disableMonitoring = () => {\r\n            window.removeEventListener('storage', el)\r\n            if (full)\r\n                clearInterval(full)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    disable(): void {\r\n        this.disableMonitoring()\r\n    }\r\n}\r\n", "import {BLMonitor} from \"./events\";\r\nimport {throttle} from \"./throttle.util\";\r\nimport {blevent} from \"./dispatched.events\";\r\nimport {on} from \"./on.event\";\r\n\r\n\r\nexport class WindowResizeMonitor implements BLMonitor {\r\n    private disableMonitoring: () => void = ()=>{};\r\n\r\n\r\n    enable(): void {\r\n        function getWindowHeight(): number {\r\n            return (\r\n                window.innerHeight ||\r\n                (document.documentElement && document.documentElement.clientHeight) ||\r\n                (document.body && document.body.clientHeight)\r\n            );\r\n        }\r\n\r\n        function getWindowWidth(): number {\r\n            return (\r\n                window.innerWidth ||\r\n                (document.documentElement && document.documentElement.clientWidth) ||\r\n                (document.body && document.body.clientWidth)\r\n            );\r\n        }\r\n\r\n        const updateDimension = throttle(() => {\r\n            const height = getWindowHeight();\r\n            const width = getWindowWidth();\r\n            blevent.window.resize({\r\n                width: Number(width),\r\n                height: Number(height)\r\n            });\r\n        }, 200);\r\n        updateDimension()\r\n        this.disableMonitoring = on('resize', updateDimension, window);\r\n\r\n    }\r\n\r\n    disable(): void {\r\n        this.disableMonitoring()\r\n    }\r\n}\r\n", "/**\r\n *\r\n * Code adapted from https://github.com/ericclemmons/unique-selector\r\n *\r\n */\r\nexport class ElementSelectorFinder {\r\n  /**\r\n   * Returns a \"minimum\" unique selector for the element\r\n   * @param element\r\n   */\r\n  findUniqueSelector(element: Element): string {\r\n    if (!element) throw new Error('Element input is mandatory');\r\n    if (!element.ownerDocument) throw new Error('Element should be part of a document');\r\n    let selector = flatSelector(element) + nthChild(element);\r\n    let foundElements = element.ownerDocument.querySelectorAll(selector);\r\n    while (foundElements.length > 1 && element.parentElement) {\r\n      element = element.parentElement;\r\n      let parentSelector = flatSelector(element) + nthChild(element);\r\n      selector = `${parentSelector} > ${selector}`;\r\n      foundElements = element.ownerDocument.querySelectorAll(selector);\r\n    }\r\n    return selector;\r\n  }\r\n}\r\n\r\nfunction nthChild(element: Element) {\r\n  let nthSelector = '';\r\n  const parent = element.parentNode;\r\n  if (parent) {\r\n    let elementSelector = flatSelector(element);\r\n    let children = Array.from(parent.children);\r\n    const brothersHavingSameSelectorCount = children\r\n      .map((c) => flatSelector(c))\r\n      .filter((s) => s == elementSelector);\r\n    if (brothersHavingSameSelectorCount.length > 1) {\r\n      let elementChildIndex = Array.from(parent.children).indexOf(element) + 1; //since nth starts from 1 - not 0\r\n      nthSelector = `:nth-child(${elementChildIndex})`;\r\n    }\r\n  }\r\n  return nthSelector;\r\n}\r\n\r\nfunction attributes(\r\n  element: Element,\r\n  attributesWhiteList = ['name', ' value', 'title', 'for', 'type']\r\n) {\r\n  const attributesSelector: string[] = [];\r\n  const { attributes } = element;\r\n  for (let a of Array.from(attributes)) {\r\n    if (attributesWhiteList.indexOf(a.nodeName.toLowerCase()) > -1) {\r\n      attributesSelector.push(`[${a.nodeName.toLowerCase()}${a.value ? `=\"${a.value}\"` : ''}]`);\r\n    }\r\n  }\r\n  return attributesSelector.join('');\r\n}\r\n\r\n/**\r\n * Returns the selector of the element nont considering any child/parent (i.e. > is never included in this selector)\r\n * @param element\r\n */\r\nfunction flatSelector(element: Element) {\r\n  return tag(element) + id(element) + attributes(element) + classes(element);\r\n}\r\n\r\nfunction classes(element: Element) {\r\n  let classSelectorList: string[] = [];\r\n  if (element.hasAttribute('class')) {\r\n    try {\r\n      const classList = Array.from(element.classList);\r\n      // return only the valid CSS selectors based on RegEx\r\n      classSelectorList = classList.filter((item) =>\r\n        !/^[a-z_-][a-z\\d_-]*$/i.test(item) ? null : item\r\n      );\r\n    } catch (e) {\r\n      let className = element.getAttribute('class') ?? '';\r\n      // remove duplicate and leading/trailing whitespaces\r\n      className = className.trim().replace(/\\s+/g, ' ');\r\n      // split into separate classnames\r\n      classSelectorList = className.split(' ');\r\n    }\r\n  }\r\n  return classSelectorList.map((c) => '.' + c).join('');\r\n}\r\n\r\nfunction id(element: Element) {\r\n  const id = element.getAttribute('id');\r\n  if (id !== null && id !== '') {\r\n    // if the ID starts with a number or contains \":\" selecting with a hash will cause a DOMException\r\n    return id.match(/(?:^\\d|:)/) ? `[id=\"${id}\"]` : '#' + id;\r\n  }\r\n  return '';\r\n}\r\n\r\nfunction tag(element: Element) {\r\n  return element.tagName.toLowerCase().replace(/:/g, '\\\\:');\r\n}\r\n\r\nfunction getParents(el: Node) {\r\n  const parents: Node[] = [];\r\n  let currentElement: Node | null = el;\r\n  while (currentElement && currentElement != el.ownerDocument!.body) {\r\n    parents.push(currentElement);\r\n    currentElement = currentElement.parentNode;\r\n  }\r\n  return parents;\r\n}\r\n\r\nfunction isUnique(el: Element, selector: string) {\r\n  if (!Boolean(selector)) return false;\r\n  const elems = el.ownerDocument.querySelectorAll(selector);\r\n  return elems.length === 1 && elems[0] === el;\r\n}\r\n", "export function buildFetchHook(): { fetch } {\r\n  const support = {\r\n    searchParams: \"URLSearchParams\" in self,\r\n    iterable: \"Symbol\" in self && \"iterator\" in Symbol,\r\n    blob:\r\n      \"FileReader\" in self &&\r\n      \"Blob\" in self &&\r\n      (function () {\r\n        try {\r\n          new Blob();\r\n          return true;\r\n        } catch (e) {\r\n          return false;\r\n        }\r\n      })(),\r\n    formData: \"FormData\" in self,\r\n    arrayBuffer: \"ArrayBuffer\" in self,\r\n  };\r\n\r\n  function parseHeaders(rawHeaders) {\r\n    let headers = new Headers();\r\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\r\n    // https://tools.ietf.org/html/rfc7230#section-3.2\r\n    let preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, \" \");\r\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function (line) {\r\n      let parts = line.split(\":\");\r\n      let key = parts.shift().trim();\r\n      if (key) {\r\n        let value = parts.join(\":\").trim();\r\n        headers.append(key, value);\r\n      }\r\n    });\r\n    return headers;\r\n  }\r\n\r\n  function fetch(input, init) {\r\n    return new Promise(async function (resolve, reject) {\r\n      const inputIsRequest = input instanceof Request;\r\n      let request = inputIsRequest ? input : new Request(input, init);\r\n\r\n      if (request.signal && request.signal.aborted) {\r\n        return reject(new DOMException(\"Aborted\", \"AbortError\"));\r\n      }\r\n\r\n      let xhr: any = new XMLHttpRequest();\r\n\r\n      function abortXhr() {\r\n        xhr.abort();\r\n      }\r\n\r\n      xhr.onload = function () {\r\n        let options: any = {\r\n          status: xhr.status,\r\n          statusText: xhr.statusText,\r\n          headers: parseHeaders(xhr.getAllResponseHeaders() || \"\"),\r\n        };\r\n        options.url =\r\n          \"responseURL\" in xhr\r\n            ? xhr.responseURL\r\n            : options.headers.get(\"X-Request-URL\");\r\n        let body = \"response\" in xhr ? xhr.response : xhr.responseText;\r\n        setTimeout(function () {\r\n          let rs = new Response(body, options);\r\n          Object.defineProperty(rs, \"url\", { value: request.url });\r\n          resolve(rs);\r\n        }, 0);\r\n      };\r\n\r\n      xhr.onerror = function () {\r\n        setTimeout(function () {\r\n          reject(new TypeError(\"Network request failed\"));\r\n        }, 0);\r\n      };\r\n\r\n      xhr.ontimeout = function () {\r\n        setTimeout(function () {\r\n          reject(new TypeError(\"Network request failed\"));\r\n        }, 0);\r\n      };\r\n\r\n      xhr.onabort = function () {\r\n        setTimeout(function () {\r\n          reject(new DOMException(\"Aborted\", \"AbortError\"));\r\n        }, 0);\r\n      };\r\n\r\n      function fixUrl(url) {\r\n        try {\r\n          return url === \"\" && self.location.href ? self.location.href : url;\r\n        } catch (e) {\r\n          return url;\r\n        }\r\n      }\r\n\r\n      xhr.open(request.method, fixUrl(request.url), true);\r\n\r\n      if (request.credentials === \"include\") {\r\n        xhr.withCredentials = true;\r\n      } else if (request.credentials === \"omit\") {\r\n        xhr.withCredentials = false;\r\n      }\r\n\r\n      if (\"responseType\" in xhr) {\r\n        if (support.blob) {\r\n          xhr.responseType = \"blob\";\r\n        } else if (\r\n          support.arrayBuffer &&\r\n          (request.headers?.get(\"Content-Type\") ?? \"\").indexOf(\r\n            \"application/octet-stream\"\r\n          ) !== -1\r\n        ) {\r\n          xhr.responseType = \"arraybuffer\";\r\n        }\r\n      }\r\n\r\n      request.headers.forEach(function (value, name) {\r\n        const skipIfFormData =\r\n          init && init.body instanceof FormData && name.toLowerCase() == \"content-type\";\r\n        if (!skipIfFormData) xhr.setRequestHeader(name, value);\r\n      });\r\n\r\n      if (request.signal) {\r\n        request.signal.addEventListener(\"abort\", abortXhr);\r\n\r\n        xhr.onreadystatechange = function () {\r\n          // DONE (success or failure)\r\n          if (xhr.readyState === 4) {\r\n            request.signal.removeEventListener(\"abort\", abortXhr);\r\n          }\r\n        };\r\n      }\r\n\r\n      let body = init?.body ?? undefined;\r\n      if (inputIsRequest) body = await input.blob();\r\n      xhr.send(body);\r\n    });\r\n  }\r\n\r\n  fetch.polyfill = true;\r\n\r\n  return {\r\n    fetch,\r\n  };\r\n}\r\n", "import {buildFetchHook} from \"./fetch.hook\";\r\nimport {\r\n    BLHTTPAbortEvent,\r\n    BLHTTPBeforeResponseEvent,\r\n    BLHTTPErrorEvent,\r\n    BLHTTPRequestEvent,\r\n    BLMonitor\r\n} from \"./events\"\r\nimport {blevent} from \"./dispatched.events\";\r\n\r\n\r\nexport class HttpMonitor implements BLMonitor {\r\n\r\n\r\n    enabled = false\r\n    private native: any\r\n    fetch = self.fetch\r\n\r\n    constructor() {\r\n        this.native = {\r\n            fetch: self.fetch,\r\n            Headers: self.Headers,\r\n            Request: self.Request,\r\n            Response: self.Response,\r\n            xhr: {\r\n                open: XMLHttpRequest.prototype.open\r\n            }\r\n        }\r\n    }\r\n\r\n    enable() {\r\n        let {fetch} = buildFetchHook()\r\n        window.fetch = fetch\r\n        enableXhrHook()\r\n        this.enabled = true\r\n\r\n    }\r\n\r\n    disable() {\r\n        self.fetch = this.native.fetch\r\n        XMLHttpRequest.prototype.open = this.native.xhr.open\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction enableXhrHook() {\r\n    const origOpen = XMLHttpRequest.prototype.open;\r\n\r\n    XMLHttpRequest.prototype.open = function (method, url, async?, user?, pass?) {\r\n        let baseUrl = ''\r\n        if (url.indexOf(\"http\") != 0) {\r\n            baseUrl = window.location.protocol + \"//\" + window.location.hostname\r\n            if (!url.startsWith(\"/\"))\r\n                baseUrl += \"/\"\r\n        }\r\n        let xhr = this as any\r\n        xhr.blhandlers = {}\r\n        let requestData: BLHTTPRequestEvent = {\r\n            name: \"before-request\",\r\n            target: xhr,\r\n            method: method,\r\n            url: baseUrl + url,\r\n            path: url,\r\n            async: async,\r\n            user: user,\r\n            password: pass,\r\n            timestamp: new Date().getTime(),\r\n            headers: {},\r\n            handlers: {},\r\n            originalCallback: xhr.onreadystatechange,\r\n            abort: false\r\n        }\r\n\r\n        xhr.httpData = {\r\n            request: requestData, response: {}\r\n        };\r\n\r\n        let origSetRequestHeader = xhr.setRequestHeader\r\n        xhr.setRequestHeader = function (header, value) {\r\n            origSetRequestHeader.apply(xhr, [header, value]);\r\n            if (!xhr.httpData.request.headers[header]) {\r\n                xhr.httpData.request.headers[header] = [];\r\n            }\r\n            xhr.httpData.request.headers[header].push(value);\r\n        }\r\n\r\n\r\n        let origSend = xhr.send\r\n        xhr.send = function (body: any) {\r\n            if (body instanceof FormData) {\r\n                let fbody = {}\r\n                for (let pair of (body as any).entries()) {\r\n                    fbody[pair[0]] = pair[1]\r\n                }\r\n                xhr.httpData.request.body = fbody\r\n            } else {\r\n\r\n                xhr.httpData.request.body = body\r\n            }\r\n\r\n\r\n            let originalCallback = xhr.onreadystatechange\r\n            xhr.onreadystatechange = function (...rargs) {\r\n                const responseData: BLHTTPBeforeResponseEvent = {\r\n                    name: \"before-response\",\r\n                    target: xhr,\r\n                    arguments: rargs,\r\n                    originalCallback,\r\n                    abort: false,\r\n                    request: requestData,\r\n                    timestamp: new Date().getTime()\r\n                }\r\n                blevent.http.before_response(responseData)\r\n                if (!responseData.abort) {\r\n                    try {\r\n                        if (responseData.originalCallback)\r\n                            responseData.originalCallback.bind(xhr)(...responseData.arguments)\r\n                        xhr.readyStateManaged = true\r\n                    } catch (_err) {\r\n                        if (!xhr.readyStateManaged)\r\n                            throw _err\r\n                    }\r\n                }\r\n            }\r\n            requestData.handlers = xhr.blhandlers\r\n            blevent.http.before_request(requestData)\r\n            if (!requestData.abort)\r\n                origSend.call(xhr, body)\r\n        }\r\n\r\n        xhr.addEventListener('error', function () {\r\n            let e: BLHTTPErrorEvent = {\r\n                request: requestData,\r\n                name: \"request-error\",\r\n                target: xhr,\r\n                timestamp: new Date().getTime()\r\n            }\r\n            blevent.http.error(e)\r\n        });\r\n        xhr.addEventListener('abort', function () {\r\n            let e: BLHTTPAbortEvent = {\r\n                request: requestData,\r\n                name: \"request-abort\",\r\n                target: xhr,\r\n                timestamp: new Date().getTime()\r\n            }\r\n            blevent.http.abort(e)\r\n        });\r\n\r\n        xhr.addEventListener('load', function () {\r\n            xhr.httpData.response.timestamp = new Date().getTime()\r\n            const headers = {};\r\n            xhr.getAllResponseHeaders()\r\n                .trim()\r\n                .split(/[\\r\\n]+/)\r\n                .map(value => value.split(/: /))\r\n                .forEach(keyValue => {\r\n                    try {\r\n                        headers[keyValue[0].trim()] = keyValue[1].trim();\r\n                    } catch (he) {\r\n                    }\r\n                });\r\n            xhr.httpData.response.headers = headers\r\n            xhr.httpData.response.status = xhr.status\r\n            xhr.httpData.response.target = xhr\r\n            xhr.httpData.response.request = requestData\r\n            xhr.httpData.response.name = \"after-response\"\r\n            if (xhr.responseType == '' || xhr.responseType == 'text') {\r\n                xhr.httpData.response.body = xhr.responseText;\r\n                blevent.http.after_response(xhr.httpData.response)\r\n            } else if (xhr.responseType == 'blob') {\r\n                let reader = new FileReader();\r\n                reader.addEventListener('loadend', (e: any) => {\r\n                    const text = e.srcElement.result;\r\n                    xhr.httpData.response.body = text;\r\n                    blevent.http.after_response(xhr.httpData.response)\r\n                });\r\n                reader.readAsText(xhr.response);\r\n            }\r\n        });\r\n        let originalEventListener = xhr.addEventListener\r\n        xhr.addEventListener = function (...args) {\r\n            let event = args[0]\r\n            let handler = args[1]\r\n            let useCapture = args[2]\r\n            let newHandler = (...hargs) => {\r\n                const responseData: BLHTTPBeforeResponseEvent = {\r\n                    name: \"before-response\",\r\n                    target: xhr,\r\n                    arguments: hargs,\r\n                    originalCallback: handler,\r\n                    abort: false,\r\n                    request: requestData,\r\n                    timestamp: new Date().getTime()\r\n                }\r\n\r\n                blevent.http.before_response(responseData)\r\n\r\n                if (!responseData.abort) {\r\n                    handler.bind(xhr)(...hargs)\r\n                    if (event == 'readystatechange')\r\n                        xhr.readyStateManaged = true\r\n                }\r\n            }\r\n            xhr.blhandlers[event] = xhr.blhandlers[event] || []\r\n            xhr.blhandlers[event].push({handler, useCapture})\r\n            originalEventListener.bind(xhr)(event, newHandler, useCapture)\r\n        };\r\n\r\n\r\n        origOpen.apply(xhr, arguments as any);\r\n    };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n", "/*\n{x,y,height,width,innerText,tag,attributi} */\n\nexport function getElementAttributes(element: Element): { [p: string]: string | null } {\n  let attributes: { [member: string]: string | null } = {};\n  for (const { name, value } of Array.from(element.attributes ?? [])) {\n    attributes[name] = value;\n  }\n  return attributes;\n}\n\nexport async function getElementRect(element: Element) {\n  return new Promise<{ x: number; y: number; width: number; height: number }>((resolve) => {\n    const obs = new IntersectionObserver((entries) => {\n      const rects = entries.map((entry) => {\n        const { x, y, width, height } = entry.boundingClientRect;\n        return { x, y, width, height };\n      });\n      obs.disconnect();\n      resolve(rects[0]);\n    });\n    obs.observe(element);\n  });\n}\n", "import {RequestAnimationFrameTimer} from \"../raf-timer.util\";\r\n\r\nexport class DomFrameMutationsMonitor {\r\n\r\n    private timer: RequestAnimationFrameTimer;\r\n    private mo: MutationObserver;\r\n\r\n\r\n    constructor(private callback: (mutations: (MutationRecord & { timestamp: number })[]) => void) {\r\n        let frameMutations: any[] = []\r\n        this.timer = new RequestAnimationFrameTimer()\r\n        this.timer.start((_ => {\r\n            if (frameMutations.length > 0) {\r\n                this.callback([...frameMutations])\r\n                frameMutations = []\r\n            }\r\n        }))\r\n        this.mo = new MutationObserver((mutations: MutationRecord[]) => {\r\n            mutations.forEach(m => {\r\n                (m as any).timestamp = new Date().getTime()\r\n            })\r\n            frameMutations.push(...mutations)\r\n        })\r\n    }\r\n\r\n    observe(n: Node) {\r\n        this.mo.observe(n, {\r\n            attributes: true,\r\n            attributeOldValue: true, // to keep track of style attribute\r\n            characterData: true,\r\n            characterDataOldValue: false,\r\n            childList: true,\r\n            subtree: true,\r\n        });\r\n    }\r\n\r\n    disable() {\r\n        try {\r\n            this.mo.disconnect()\r\n            this.timer.stop()\r\n        } catch (e) {\r\n            console.log(\"Probably the observer was not started using observe()\", e)\r\n        }\r\n    }\r\n}\r\n", "export class CssAbsoluteUrlTransformer {\r\n\r\n    URL_IN_CSS_REF = /url\\((?:'([^']*)'|\"([^\"]*)\"|([^)]*))\\)/gm;\r\n    RELATIVE_PATH = /^(?!www\\.|(?:http|ftp)s?:\\/\\/|[A-Za-z]:\\\\|\\/\\/).*/;\r\n    DATA_URI = /^(data:)([\\w\\/\\+\\-]+);(charset=[\\w-]+|base64).*,(.*)/i;\r\n\r\n    transform(cssText: string, href: string) {\r\n        return (cssText || '').replace(\r\n            this.URL_IN_CSS_REF,\r\n            (origin, path1, path2, path3) => {\r\n                const filePath = path1 || path2 || path3;\r\n                if (!filePath) {\r\n                    return origin;\r\n                }\r\n                else if (!this.RELATIVE_PATH.test(filePath)) {\r\n                    return `url('${filePath}')`;\r\n                }\r\n                else if (this.DATA_URI.test(filePath)) {\r\n                    let u = `url(${filePath})`\r\n                    if(filePath.indexOf(\"\\\\\\\"\") >= 0)\r\n                        u = `url('${filePath}')`\r\n                    else if(filePath.indexOf(\"\\\\'\") >= 0)\r\n                        u = `url(\"${filePath}\")`\r\n                    else if(filePath.indexOf(\"'\") >= 0)\r\n                        u = `url(\"${filePath}\")`\r\n                    else if(filePath.indexOf(\"\\\"\") >= 0)\r\n                        u = `url('${filePath}')`\r\n                    return u;\r\n                }\r\n                else if (filePath[0] === '/') {\r\n                    return `url('${this.extractOrigin(href) + filePath}')`;\r\n                }\r\n                const stack = href.split('/');\r\n                const parts = filePath.split('/');\r\n                stack.pop();\r\n                for (const part of parts) {\r\n                    if (part === '.') {\r\n                        continue;\r\n                    } else if (part === '..') {\r\n                        stack.pop();\r\n                    } else {\r\n                        stack.push(part);\r\n                    }\r\n                }\r\n                return `url('${stack.join('/')}')`;\r\n            }\r\n        );\r\n    }\r\n\r\n    proxyUrls(cssText: string, proxyBasePath: string) {\r\n        return (cssText || '').replace(\r\n            this.URL_IN_CSS_REF,\r\n            (_, path1, path2, path3) => {\r\n                const filePath = path1 || path2 || path3;\r\n                if (!this.RELATIVE_PATH.test(filePath)) {\r\n                    return `url('${proxyBasePath + filePath}')`;\r\n                } else\r\n                    return `url('${filePath}')`;\r\n            }\r\n        );\r\n    }\r\n\r\n    private extractOrigin(url: string): string {\r\n        let origin;\r\n        if (url.indexOf('//') > -1) {\r\n            origin = url\r\n                .split('/')\r\n                .slice(0, 3)\r\n                .join('/');\r\n        } else {\r\n            origin = url.split('/')[0];\r\n        }\r\n        origin = origin.split('?')[0];\r\n        return origin;\r\n    }\r\n}", "import {CssAbsoluteUrlTransformer} from \"./css-absolute-url.transformer\";\r\n\r\nexport class DOMSerializerHelper {\r\n    private letterNumbers = RegExp('[^a-z1-9]')\r\n    private a = document.createElement('a');\r\n\r\n    private tagName(t: string): string {\r\n        const processedTagName = t.toLowerCase().trim();\r\n        return this.letterNumbers.test(processedTagName.replace(/-/g, '')) ? 'div' : processedTagName;\r\n    }\r\n\r\n    private getAbsoluteUrl(url) {\r\n        this.a.href = url;\r\n        return this.a.href;\r\n    }\r\n\r\n    private getAbsoluteSrcset(attributeValue: string) {\r\n        if (attributeValue.trim() === '') {\r\n            return attributeValue;\r\n        }\r\n\r\n        function matchAll(regExp, str) {\r\n            const matches:any[] = [];\r\n\r\n            function replacementFunc(all, first) {\r\n                matches.push(first);\r\n            }\r\n\r\n            str.replace(regExp, replacementFunc);\r\n            return matches;\r\n        }\r\n\r\n        let allSrcSets = matchAll(/[^\"\\'=\\s]+\\S[^,]+/g, attributeValue)\r\n\r\n        // srcset = \"url size,url1 size1\"\r\n        return allSrcSets.map(x => {\r\n            let v = x[0] || ''\r\n            if (v.startsWith(\",\"))\r\n                v = v.substr(1)\r\n            return v\r\n        })\r\n            .map(srcItem => {\r\n\r\n                const trimmedSrcItem = srcItem.trimLeft().trimRight();\r\n                const urlAndSize = trimmedSrcItem.split(' ').filter(x => x);\r\n                let value = ''\r\n                if (urlAndSize.length === 2) {\r\n                    const absUrl = this.getAbsoluteUrl(urlAndSize[0]);\r\n                    value = `${absUrl} ${urlAndSize[1]}`;\r\n                } else if (urlAndSize.length === 1) {\r\n                    const absUrl = this.getAbsoluteUrl(urlAndSize[0]);\r\n                    value = `${absUrl}`;\r\n                }\r\n                return value;\r\n            })\r\n            .join(',');\r\n    }\r\n\r\n\r\n    getAbsoluteUrlsStylesheet(\r\n        cssText: string | null,\r\n        href = location.href,\r\n    ): string {\r\n        return new CssAbsoluteUrlTransformer().transform(cssText ?? '', href)\r\n    }\r\n\r\n    getElementAttributes(n: Node) {\r\n        let element = n as HTMLElement\r\n        let attributes: { [member: string]: string | null } = {};\r\n        for (const {name, value} of Array.from(element.attributes ?? [])) {\r\n            attributes[name] = this.serializeAttribute(name, value);\r\n        }\r\n        return attributes\r\n    }\r\n\r\n    serializeAttribute(name: string, value: string | null) {\r\n        if (name === 'src' || (name === 'href' && value)) {\r\n            return this.getAbsoluteUrl(value)\r\n        } else if (name === 'srcset' && value) {\r\n            return this.getAbsoluteSrcset(value);\r\n        } else if (name === 'style' && value) {\r\n            return this.getAbsoluteUrlsStylesheet(value);\r\n        } else {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    nodeElementTagAttributes(n: Node) {\r\n        let attributes = this.getElementAttributes(n)\r\n        let element = n as HTMLElement\r\n        const tag = element instanceof DocumentFragment? \"#document-fragment\" : this.tagName(element.tagName);\r\n        return {element, tag, attributes}\r\n    }\r\n}\r\n", "import {BLMutationEventData} from \"../../dom.event\";\r\n\r\nexport class StyleAttributeSerializer {\r\n\r\n    serialize(target: HTMLElement, oldValue = '') {\r\n        const styles: BLMutationEventData[\"styles\"] = {}\r\n        const tempEl = document.createElement('span');\r\n        tempEl.setAttribute('style', oldValue);\r\n        for (let i = 0; i < target.style.length; i++) {\r\n            let s = target.style[i];\r\n            if (target.style.getPropertyValue(s) !=\r\n                tempEl.style.getPropertyValue(s) ||\r\n                target.style.getPropertyPriority(s) != tempEl.style.getPropertyPriority(s)) {\r\n                styles[s] = target.style.getPropertyValue(s)\r\n                if (target.style.getPropertyPriority(s))\r\n                    styles[s] += \" !important\"\r\n            }\r\n        }\r\n        for (let i = 0; i < tempEl.style.length; i++) {\r\n            let s = tempEl.style[i];\r\n            if (target.style.getPropertyValue(s) === '' || !target.style.getPropertyValue(s)) {\r\n                styles[s] = null // style property was deleted\r\n            }\r\n        }\r\n        return styles\r\n    }\r\n\r\n}\r\n", "import {DOMSerializerHelper} from \"./serializer.utils\";\r\nimport {ElementSerializer} from \"./element.serializer\";\r\nimport {ElidGenerator} from \"./elid.generator\";\r\nimport {StyleAttributeSerializer} from \"./style-attribute.serializer\";\r\nimport {BLMutationEventData} from \"../../dom.event\";\r\n\r\n\r\nexport class MutationSerializer {\r\n\r\n    constructor(private elementsMap: Map<Node, number>, private elIdGenerator: ElidGenerator, private serializer: ElementSerializer) {\r\n    }\r\n\r\n    serialize(mutations: (MutationRecord & { timestamp: number })[]): BLMutationEventData[] {\r\n\r\n        const elementAttributesMap = new Map<Node, { timestamp: number, attributes: BLMutationEventData[\"attributes\"] }>()\r\n        const elementStylesMap = new Map<Node, { oldValue: string, styles: BLMutationEventData[\"styles\"], timestamp: number }>()\r\n        const elementTextMap = new Map<Node, { text: string, timestamp: number }>()\r\n\r\n        mutations.sort((e1, e2) => {\r\n            return e1.timestamp - e2.timestamp\r\n        })\r\n\r\n        const dsh = new DOMSerializerHelper()\r\n        const removeRecursivelyFromElementsMap = (n: Node) => {\r\n            this.elementsMap.delete(n)\r\n            n.childNodes.forEach(c => removeRecursivelyFromElementsMap(c))\r\n        }\r\n\r\n\r\n        let eventMutations: BLMutationEventData[] = []\r\n\r\n        for (let m of mutations) {\r\n            if (m.type == \"attributes\" && m.attributeName) {\r\n                const target = m.target as HTMLElement\r\n                const attributeValue = target.getAttribute(m.attributeName)\r\n                if (m.attributeName == \"style\" && attributeValue && attributeValue.length > 100) {\r\n                    if (!elementStylesMap.has(target)) {\r\n                        let styles = new StyleAttributeSerializer().serialize(target, m.oldValue ?? '')\r\n                        elementStylesMap.set(target, {styles, oldValue: m.oldValue ?? '', timestamp: m.timestamp})\r\n                    }\r\n                    let oldValue = elementStylesMap.get(target)!.oldValue\r\n                    let styles = new StyleAttributeSerializer().serialize(target, oldValue)\r\n                    elementStylesMap.get(target)!.styles = styles\r\n                    elementStylesMap.get(target)!.timestamp = m.timestamp\r\n\r\n                } else {\r\n                    let value = dsh.serializeAttribute(m.attributeName, attributeValue ?? null)\r\n                    if (!elementAttributesMap.has(target)) {\r\n                        let attributes = {}\r\n                        attributes[m.attributeName] = value\r\n                        elementAttributesMap.set(target, {attributes, timestamp: m.timestamp})\r\n                    }\r\n                    const prevAttributes = elementAttributesMap.get(target)!.attributes!\r\n                    const attrName = m.attributeName\r\n                    prevAttributes[attrName] = value\r\n                    elementAttributesMap.get(target)!.timestamp = m.timestamp\r\n                }\r\n            } else if (m.type == \"characterData\") {\r\n                const value = m.target.textContent ?? '';\r\n                elementTextMap.set(m.target, {text: value, timestamp: m.timestamp})\r\n            } else if (m.type == \"childList\") {\r\n                m.addedNodes.forEach(c => {\r\n                    eventMutations.push(this.generateAddEvent(c, m.target, m.timestamp))\r\n                })\r\n                m.removedNodes.forEach(c => {\r\n                    let re = this.generateRemoveEvent(c, m.target, m.timestamp)\r\n                    eventMutations.push(re)\r\n                    removeRecursivelyFromElementsMap(c) // TODO maybe we can avoid removing nodes from map to reuse node removed and readded in DOM\r\n                })\r\n\r\n            }\r\n        }\r\n\r\n        elementAttributesMap.forEach((e, n) => {\r\n            let ae = this.generateAttributeMutationEvent(n, e.attributes, e.timestamp)\r\n            eventMutations.push(ae)\r\n        })\r\n\r\n        elementStylesMap.forEach((e, n) => {\r\n            eventMutations.push(this.generateStyleAttributeMutationEvent(n, e.styles, e.timestamp))\r\n        })\r\n        elementTextMap.forEach((e, n) => {\r\n            eventMutations.push(this.generateTextMutationEvent(n, e.text, e.timestamp))\r\n        })\r\n\r\n\r\n        return eventMutations\r\n    }\r\n\r\n    private generateAddEvent(n: Node, parent: Node, timestamp: number) {\r\n        let serialized: BLMutationEventData = this.serializer.serialize(n) as unknown as BLMutationEventData\r\n        serialized.after = this.elId(n.nextSibling)\r\n        serialized.before = this.elId(n.previousSibling)\r\n        serialized.parent = this.elId(parent)\r\n        return {...serialized, timestamp, name: 'mutation-add'} as BLMutationEventData\r\n    }\r\n\r\n    private generateAttributeMutationEvent(a: Node, attributes, timestamp: number) {\r\n        return {\r\n            name: 'mutation-attribute',\r\n            attributes,\r\n            id: this.elId(a),\r\n            timestamp\r\n        } as BLMutationEventData\r\n    }\r\n\r\n    private generateStyleAttributeMutationEvent(a: Node, styles: BLMutationEventData[\"styles\"], timestamp: number) {\r\n        return {\r\n            name: 'mutation-style',\r\n            styles,\r\n            id: this.elId(a),\r\n            timestamp\r\n        } as BLMutationEventData\r\n    }\r\n\r\n    private generateTextMutationEvent(t: Node, value: string, timestamp: number) {\r\n        return {\r\n            name: 'mutation-text',\r\n            text: value,\r\n            id: this.elId(t),\r\n            timestamp\r\n        } as BLMutationEventData\r\n    }\r\n\r\n    private generateRemoveEvent(c: Node, parent: Node, timestamp: number) {\r\n        return {\r\n            name: 'mutation-remove',\r\n            parent: this.elId(parent),\r\n            id: this.elId(c),\r\n            timestamp\r\n        } as BLMutationEventData\r\n    }\r\n\r\n    private elId(n) {\r\n        return this.elIdGenerator.id(n);\r\n    }\r\n}\r\n", "export class ElidGenerator {\r\n\r\n    constructor(private elementsMap: Map<Node, number> = new Map<Node, number>(), private lastId: number = 0) {\r\n    }\r\n\r\n    get lastGeneratedId() {\r\n        return this.lastId\r\n    }\r\n\r\n    /**\r\n     * Get a Node and returns its ID from the map (or a new ID if the map does not contain it yet)\r\n     * Note that if null is passed as parameter the returned value will be undefined\r\n     * since sometime you can pass the sibling of a node and the sibling does not exist\r\n     * @param t\r\n     */\r\n    id(t: Node | null) {\r\n        if (!t)\r\n            return undefined\r\n        else {\r\n            if (!this.elementsMap.has(t)) {\r\n                this.lastId++\r\n                this.elementsMap.set(t, this.lastId)\r\n            }\r\n            return this.elementsMap.get(t)\r\n        }\r\n    }\r\n\r\n    updateLastId(maxId: number) {\r\n        this.lastId = maxId\r\n    }\r\n}", "import {DomSerializer} from \"./dom.serializer\";\r\nimport {ElementSerializer} from \"./element.serializer\";\r\nimport {DOMSerializerHelper} from \"./serializer.utils\";\r\nimport {DOMJson} from \"../../dom.event\";\r\n\r\nexport class WebComponentDomSerializer implements DomSerializer {\r\n\r\n    constructor(private elementDomSerializer: ElementSerializer) {\r\n    }\r\n\r\n    serialize(n: Node): DOMJson {\r\n        let dsh = new DOMSerializerHelper()\r\n        let {element, tag, attributes} = dsh.nodeElementTagAttributes(n)\r\n        let w = n as any\r\n\r\n\r\n        const serialize = c => this.elementDomSerializer.serialize(c)\r\n\r\n        let children: DOMJson[] = []\r\n        let shadowStyle = \"\"\r\n        let shadowMode: 'open' | 'closed' = 'open'\r\n        let shadowChildren: DOMJson[] = []\r\n        let shadow: any = null\r\n        let shadowRoot = element.shadowRoot || w._closed_mode_shadowRoot\r\n        let isDocumentFragment = ()=> {\r\n            try {\r\n                return shadowRoot.$$OwnerKey$$ || shadowRoot.constructor.prototype.nodeName == \"#document-fragment\"\r\n            } catch (e) {\r\n                return false\r\n            }\r\n        }\r\n        if (shadowRoot) {\r\n            try {\r\n                let innerStyle = [...shadowRoot.adoptedStyleSheets[0].rules].map(r => {\r\n                    let css = dsh.getAbsoluteUrlsStylesheet(\r\n                        r.cssText\r\n                    );\r\n                    return css\r\n                }).join(\"\")\r\n                shadowStyle = innerStyle\r\n            } catch (e) {\r\n                //console.log(\"could not grab inner style\")\r\n            }\r\n\r\n            shadowMode = shadowRoot.mode\r\n\r\n            for (let c of shadowRoot.childNodes)\r\n                shadowChildren.push(serialize(c))\r\n\r\n            shadow = {children: shadowChildren, mode: shadowMode, shadowType: isDocumentFragment()? 'document-fragment' : 'shadow-dom', style: shadowStyle}\r\n        }\r\n        for (let c of w.childNodes)\r\n            children.push(serialize(c))\r\n\r\n        if(isDocumentFragment())\r\n            shadow.documentFragment = serialize(element.shadowRoot)\r\n\r\n\r\n        return {children, tag, attributes, shadow, type: \"web-component\"};\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "import {DomSerializer} from \"./dom.serializer\";\r\nimport {DOMSerializerHelper} from \"./serializer.utils\";\r\nimport {DOMJson} from \"../../dom.event\";\r\n\r\nexport class TextDomSerializer implements DomSerializer {\r\n    serialize(n: Node): DOMJson {\r\n        let doms = new DOMSerializerHelper()\r\n        const parentTagName =\r\n            n.parentNode && (n.parentNode as HTMLElement).tagName;\r\n        let textContent = (n as Text).textContent ?? '';\r\n        const isStyle = parentTagName === 'STYLE' ? true : undefined;\r\n        if (isStyle && textContent) {\r\n            return {\r\n                type: \"css-text\",\r\n                css: doms.getAbsoluteUrlsStylesheet(textContent)\r\n            }\r\n        }\r\n        if (parentTagName === 'SCRIPT') {\r\n            return {\r\n                type: \"script-text\",\r\n                script: textContent.replace(/\\n/g, \"\\n\\\\\\\\\")\r\n            }\r\n        }\r\n        let type = \"text\"\r\n        return {\r\n            type,\r\n            text: textContent || '',\r\n        };\r\n    }\r\n\r\n}\r\n", "import {DomSerializer} from \"./dom.serializer\";\r\nimport {DOMSerializerHelper} from \"./serializer.utils\";\r\nimport {DOMJson} from \"../../dom.event\";\r\n\r\nexport class StylesheetDomSerializer implements DomSerializer {\r\n    serialize(n: Node): DOMJson {\r\n        let dsh = new DOMSerializerHelper()\r\n        let {tag, attributes} = dsh.nodeElementTagAttributes(n)\r\n        let css = ''\r\n        if (tag === 'link') {\r\n            return this.serializeLink(n, attributes, dsh)\r\n        } else if (tag === 'style' && (n as HTMLStyleElement).sheet &&\r\n            !(\r\n                (n as HTMLElement).innerText ||\r\n                (n as HTMLElement).textContent ||\r\n                ''\r\n            ).trim().length\r\n        ) {\r\n            const cssText = getCssRulesString(\r\n                (n as HTMLStyleElement).sheet as CSSStyleSheet,\r\n            );\r\n            if (cssText) {\r\n                css = dsh.getAbsoluteUrlsStylesheet(cssText, location.href);\r\n            }\r\n            return {type: \"style\", tag: 'style', attributes, css}\r\n        } else {\r\n            return {type: tag, tag: 'style', attributes, css}\r\n        }\r\n    }\r\n\r\n    private serializeLink(n: Node, attributes, dsh: DOMSerializerHelper): DOMJson {\r\n        const stylesheet = Array.from(document.styleSheets).find(s => {\r\n            return s.href === (n as HTMLLinkElement).href;\r\n        });\r\n        let css = ''\r\n        const cssText = getCssRulesString(stylesheet as CSSStyleSheet);\r\n        if (cssText) {\r\n            delete attributes.rel;\r\n            delete attributes.href;\r\n            css = dsh.getAbsoluteUrlsStylesheet(\r\n                cssText,\r\n                stylesheet!.href!,\r\n            );\r\n        }\r\n        return {type: \"link-stylesheet\", tag: 'link', attributes, css}\r\n    }\r\n}\r\n\r\nfunction getCssRulesString(s: CSSStyleSheet): string | null {\r\n    try {\r\n        const rules = s.rules || s.cssRules;\r\n        return rules\r\n            ? Array.from(rules).reduce(\r\n                (prev, cur) => prev + getCssRuleString(cur),\r\n                '',\r\n            )\r\n            : null;\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction isCSSImportRule(rule: CSSRule): rule is CSSImportRule {\r\n    return 'styleSheet' in rule;\r\n}\r\n\r\nfunction getCssRuleString(rule: CSSRule): string {\r\n    return isCSSImportRule(rule)\r\n        ? getCssRulesString(rule.styleSheet) || ''\r\n        : rule.cssText;\r\n}\r\n", "import {DOMSerializerHelper} from \"./serializer.utils\";\r\nimport {DomSerializer} from \"./dom.serializer\";\r\nimport {DOMJson} from \"../../dom.event\";\r\n\r\nexport class MediaDomSerializer implements DomSerializer {\r\n    serialize(n: Node): DOMJson {\r\n        let dsh = new DOMSerializerHelper()\r\n        let {tag, attributes} = dsh.nodeElementTagAttributes(n)\r\n        let state: 'pause' | 'play' = (n as HTMLMediaElement).paused ? 'pause' : 'play'\r\n        return {type: tag, tag, attributes, state};\r\n    }\r\n\r\n}\r\n", "import {DomSerializer} from \"./dom.serializer\";\r\nimport {DOMSerializerHelper} from \"./serializer.utils\";\r\nimport {DOMJson} from \"../../dom.event\";\r\n\r\nexport class FormDomSerializer implements DomSerializer {\r\n    serialize(n: Node): DOMJson {\r\n        let dsh = new DOMSerializerHelper()\r\n        let {tag, attributes} = dsh.nodeElementTagAttributes(n)\r\n        if (\r\n            tag === 'input' ||\r\n            tag === 'textarea' ||\r\n            tag === 'select'\r\n        ) {\r\n            const value = (n as HTMLInputElement | HTMLTextAreaElement).value;\r\n            if (\r\n                attributes[\"type\"] !== 'radio' &&\r\n                attributes[\"type\"] !== 'checkbox' &&\r\n                value\r\n            ) {\r\n                attributes[\"value\"] = value;\r\n            } else if ((n as HTMLInputElement).checked) {\r\n                attributes[\"checked\"] = (n as HTMLInputElement).checked + '';\r\n            }\r\n            return {type: tag, tag, attributes}\r\n        } else if (tag === 'option') {\r\n            const selectValue = (n as HTMLOptionElement).parentElement;\r\n            if (attributes[\"value\"] === (selectValue as HTMLSelectElement).value) {\r\n                attributes[\"selected\"] = (n as HTMLOptionElement).selected + '';\r\n            }\r\n            return {type: \"option\", tag, attributes}\r\n        } else\r\n            return {type: tag, tag, attributes}\r\n    }\r\n\r\n\r\n}\r\n", "import {DomSerializer} from \"./dom.serializer\";\r\nimport {DOMSerializerHelper} from \"./serializer.utils\";\r\nimport {DOMJson} from \"../../dom.event\";\r\n\r\nexport class CanvasDomSerializer implements DomSerializer {\r\n    serialize(n: Node): DOMJson {\r\n        let dsh = new DOMSerializerHelper()\r\n        let attributes = dsh.getElementAttributes(n)\r\n        let dataUrl = (n as HTMLCanvasElement).toDataURL();\r\n        return {type: \"canvas\", tag: 'canvas', dataUrl, attributes};\r\n    }\r\n\r\n}\r\n", "import {DomSerializer} from \"./dom.serializer\";\r\nimport {WebComponentDomSerializer} from \"./web-component.serializer\";\r\nimport {TextDomSerializer} from \"./text.serializer\";\r\nimport {DOMSerializerHelper} from \"./serializer.utils\";\r\nimport {StylesheetDomSerializer} from \"./stylesheet.serializer\";\r\nimport {MediaDomSerializer} from \"./media.serializer\";\r\nimport {FormDomSerializer} from \"./form.serializer\";\r\nimport {CanvasDomSerializer} from \"./canvas.serializer\";\r\nimport {DOMJson} from \"../../dom.event\";\r\n\r\nexport class ElementSerializer implements DomSerializer {\r\n\r\n    constructor(public onNodeSerialized?: (node: Node, json) => void, private win = window) {\r\n    }\r\n\r\n    serialize(n: Node): DOMJson {\r\n        let serialized: DOMJson;\r\n        let isWebComponent = n.nodeName && n.nodeName.includes(\"-\") && n.nodeName != \"#document-fragment\"\r\n        if (isWebComponent) {\r\n            serialized = new WebComponentDomSerializer(this).serialize(n)\r\n        } else {\r\n            let children: DOMJson[] = []\r\n            for (const child of Array.from(n.childNodes)) {\r\n                let c = this.serialize(child)\r\n                children.push(c)\r\n            }\r\n\r\n            const serializedNode = this.serializeSingle(n)\r\n            serializedNode.children = children\r\n            serialized = serializedNode;\r\n\r\n        }\r\n        if (this.onNodeSerialized)\r\n            this.onNodeSerialized(n, serialized)\r\n        return serialized\r\n\r\n\r\n    }\r\n\r\n    private serializeSingle(n: Node): DOMJson {\r\n\r\n        switch (n.nodeType) {\r\n            case n.DOCUMENT_NODE:\r\n                return {\r\n                    type: \"document\",\r\n                    href: this.win.location.href,\r\n                    width: this.win.innerWidth,\r\n                    height: this.win.innerHeight,\r\n                    scroll: {x: this.win.scrollX, y: this.win.scrollY}\r\n                };\r\n            case n.DOCUMENT_TYPE_NODE:\r\n                return {\r\n                    type: \"doc-type\",\r\n                    name: (n as DocumentType).name,\r\n                    publicId: (n as DocumentType).publicId,\r\n                    systemId: (n as DocumentType).systemId,\r\n                };\r\n            case n.TEXT_NODE:\r\n                return new TextDomSerializer().serialize(n)\r\n            case n.CDATA_SECTION_NODE:\r\n                return {\r\n                    type: \"cdata\",\r\n                    textContent: '',\r\n                };\r\n            case n.COMMENT_NODE:\r\n                return {\r\n                    type: \"comment\",\r\n                    textContent: (n as Comment).textContent || '',\r\n                };\r\n            default:\r\n                return this.serializeElement(n)\r\n        }\r\n    }\r\n\r\n    private serializeElement(n: Node) {\r\n        let dsh = new DOMSerializerHelper()\r\n        let {element, tag, attributes} = dsh.nodeElementTagAttributes(n)\r\n        let scroll = {x: element.scrollTop, y: element.scrollLeft}\r\n        let json: DOMJson = {type: tag, tag, scroll}\r\n        if (tag === 'link' || tag === 'style') {\r\n            json = {...json, ...new StylesheetDomSerializer().serialize(n)}\r\n        } else if (tag === 'audio' || tag === 'video') {\r\n            json = {...json, ...new MediaDomSerializer().serialize(n)}\r\n        } else if (\r\n            tag === 'input' ||\r\n            tag === 'textarea' ||\r\n            tag === 'select' ||\r\n            tag === \"option\"\r\n        )\r\n            json = {...json, ...new FormDomSerializer().serialize(n)}\r\n        else if (tag === \"canvas\")\r\n            json = {...json, ...new CanvasDomSerializer().serialize(n)}\r\n        else\r\n            json = {\r\n                ...json,\r\n                type: tag,\r\n                tag,\r\n                attributes\r\n            }\r\n        if (json.tag == \"img\") {\r\n            let img = n as HTMLImageElement\r\n            if (img.width && img.height) {\r\n                json.width = img.width\r\n                json.height = img.height\r\n            } else {\r\n                img.onload = ()=>{\r\n                    json.width = img.width\r\n                    json.height = img.height\r\n                }\r\n            }\r\n        }\r\n        return json\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n", "import { DomFrameMutationsMonitor } from './dom-mutations.monitor';\nimport { MutationSerializer } from './serializer/mutation.serializer';\nimport { BLDomEvent } from '../dom.event';\nimport { ElidGenerator } from './serializer/elid.generator';\nimport { ElementSerializer } from './serializer/element.serializer';\nimport { BLMonitor } from '../events';\nimport { blevent } from '../dispatched.events';\n\nexport class DomMonitor implements BLMonitor {\n  private mutationObserver!: DomFrameMutationsMonitor;\n  private fullEventFireIntervalId;\n  private elementsMap: Map<Node, number> = new Map<Node, number>();\n\n  constructor(\n    private options: { intervalTimeForFullEvent: number } = { intervalTimeForFullEvent: -1 }\n  ) {}\n\n  enable() {\n    //(window as any).bl_serializedMap = this.elementsMap\n    this.mutationObserver = new DomFrameMutationsMonitor((frameMutations) => {\n      let mutations = new MutationSerializer(this.elementsMap, elid, serializer).serialize(\n        frameMutations\n      );\n      let e: BLDomEvent = {\n        mutations,\n        timestamp: new Date().getTime(),\n        type: 'dom',\n        name: 'dom-change'\n      };\n      blevent.dom.change(e);\n    });\n    let elid = new ElidGenerator(this.elementsMap);\n    let serializer = new ElementSerializer((n, j) => {\n      let sr = (n as any).shadowRoot || (n as any)._closed_mode_shadowRoot;\n\n      if (sr) {\n        this.mutationObserver.observe(sr);\n      }\n      j.id = elid.id(n); // element is added to map by elid\n      //;(n as any).setAttribute && (n as any).setAttribute(\"data_blid\", j.id)\n    });\n    blevent.dom.map_created({ map: this.elementsMap, serializer });\n\n    if (this.options.intervalTimeForFullEvent > 0)\n      this.fullEventFireIntervalId = setInterval(() => {\n        this.fireFullDomEvent(serializer);\n      }, this.options.intervalTimeForFullEvent);\n\n    this.fireFullDomEvent(serializer);\n    this.mutationObserver.observe(document);\n    let webComponents = [...(document.querySelectorAll('*') as any)].filter(\n      (x) => x.tagName.indexOf('-') >= 0\n    );\n    const pageHasWebComponents = webComponents.length > 0;\n    if (pageHasWebComponents) {\n      for (let w of webComponents) {\n        let sr = w.shadowRoot || w._closed_mode_shadowRoot;\n        if (sr) this.mutationObserver.observe(sr);\n      }\n    }\n  }\n\n  disable() {\n    this.mutationObserver.disable();\n    if (this.fullEventFireIntervalId) clearInterval(this.fullEventFireIntervalId);\n  }\n\n  private fireFullDomEvent(serializer: ElementSerializer) {\n    let snapshot = serializer.serialize(document);\n    const fullEvent = { full: snapshot } as BLDomEvent;\n    blevent.dom.full(fullEvent);\n    return snapshot;\n  }\n\n  takeDomScreenshot() {\n    return this.fireFullDomEvent(new ElementSerializer());\n  }\n}\n", "import {observeMethod} from \"../method.observer\";\r\nimport {BLMonitor} from \"../events\";\r\nimport {blevent} from \"../dispatched.events\";\r\n\r\nexport class CssMonitor implements BLMonitor {\r\n    private insertOriginal!: () => void;\r\n    private removeOriginal!: () => void;\r\n\r\n    enable(): void {\r\n        this.insertOriginal = observeMethod(CSSStyleSheet.prototype, \"insertRule\", function (this, rule: string, index?: number) {\r\n            blevent.dom.css_add({rule, target: this.ownerNode, index})\r\n        })\r\n\r\n        this.removeOriginal = observeMethod(CSSStyleSheet.prototype, \"deleteRule\", function (this, index: number) {\r\n            blevent.dom.css_remove({target: this.ownerNode, index})\r\n        })\r\n    }\r\n\r\n    disable(): void {\r\n        this.insertOriginal()\r\n        this.removeOriginal()\r\n    }\r\n}\r\n", "import {BLMonitor} from \"../events\";\r\nimport {on} from \"../on.event\";\r\nimport {blevent} from \"../dispatched.events\";\r\n\r\nexport class MediaMonitor implements BLMonitor {\r\n    private disableMonitoring!: () => void;\r\n\r\n    enable(): void {\r\n\r\n\r\n        const handlers = [\r\n            on('play', e => {\r\n                blevent.media.play({target: e.target})\r\n            }),\r\n            on('pause', e => {\r\n                blevent.media.pause({target: e.target})\r\n            })\r\n        ];\r\n        this.disableMonitoring = () => {\r\n            handlers.forEach(h => h());\r\n        };\r\n    }\r\n\r\n    disable(): void {\r\n        this.disableMonitoring()\r\n    }\r\n}\r\n", "export class ForceWebComponentsSerializationPatch {\r\n  apply() {\r\n    const { attachShadow } = Element.prototype;\r\n    Element.prototype.attachShadow = function () {\r\n      let sh = attachShadow.apply(this, arguments as any);\r\n      (this as any)._closed_mode_shadowRoot = sh;\r\n      return sh;\r\n    };\r\n  }\r\n}\r\n"],
  "mappings": "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",
  "names": ["events", "selector", "attributes", "id", "body", "attributes", "attributes", "tag", "styles", "attributes", "tag", "attributes", "tag", "attributes", "tag", "attributes", "state", "tag", "attributes", "attributes", "tag", "attributes", "attributes"]
}
